apiVersion: v2
name: helm-chart-backoffice
namespace: whatnow-cluster
description: Helm chart to deploy Laravel API - Production Environment
version: 0.1.0
appVersion: "1.0.0"
# Azure Container Registry details
image:
    repository: ifrcsmdb.azurecr.io/whatnow
    tag: "production"
    pullPolicy: Always

replicaCount: 2

# Kubernetes service configuration
service:
    type: ClusterIP
    port: 80
    targetPort: 80
# Environment variables
env:
    APP_NAME: 'IFRC Safety Messages Database'
    APP_ENV: production
    APP_DEBUG: false
    APP_LOG_LEVEL: info
    APP_URL: https://preparemessages.ifrc.org
    GOOGLE_MAPS_KEY:
    DB_CONNECTION: mysql
    DB_PORT: 3306
    BROADCAST_DRIVER: log
    CACHE_DRIVER: file
    SESSION_DRIVER: file
    QUEUE_DRIVER: sync
    REDIS_HOST: redis
    REDIS_PASSWORD: null
    REDIS_PORT: 6379
    MAIL_DRIVER: smtp
    MAIL_HOST: smtp.azurecomm.net
    MAIL_PORT: 587
    MAIL_ENCRYPTION: tls
    MAIL_USER: Whatnow
    MAIL_FROM_ADDRESS: DoNotReply@email.whatnow.ifrc.org
    PUSHER_APP_ID:
    PUSHER_APP_KEY:
    PUSHER_APP_SECRET:
    RCN_API_VERSION: v1
    FACEBOOK_APP_ID:
    FACEBOOK_APP_SECRET:
    GOOGLE_CLIENT_ID:
    GOOGLE_CLIENT_SECRET:
    GOOGLE_ANALYTICS_TRACKER_ID:
    SENTRY_DSN:
    TRANSIFEX_API_TOKEN:
    TRANSIFEX_PROJECT:
    TRANSIFEX_SLUG:
    BUCKET_URL: https://smdbstorageaccount.blob.core.windows.net/images


secrets:
    dbSecretName: backoffice-production-credentials
    variables:
        DB_HOST: BACKOFFICE_DB_HOST_PROD
        DB_DATABASE: BACKOFFICE_DB_DATABASE_PROD
        DB_USERNAME: BACKOFFICE_DB_USERNAME_PROD
        DB_PASSWORD: BACKOFFICE_DB_PASSWORD_PROD
        APP_KEY: BACKOFFICE_APP_KEY_PROD
        JWT_SECRET: BACKOFFICE_JWT_SECRET_PROD
        RCN_API_URL: BACKOFFICE_RCN_API_URL_PROD
        RCN_API_USER: BACKOFFICE_RCN_API_USER_PROD
        RCN_API_PASSWORD: BACKOFFICE_RCN_API_PASSWORD_PROD
        MAIL_ENDPOINT: MAIL_ENDPOINT_PROD
        MAIL_FROM: MAIL_FROM_PROD
        MAIL_API_KEY: MAIL_API_KEY_PROD


ingress:
    enabled: true
    annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
        - host: "preparemessages.ifrc.org"
          paths:
              - path: /
                pathType: Prefix
    tls:
        - hosts:
              - "preparemessages.ifrc.org"
          secretName: "ifrc.certificates.secret"
